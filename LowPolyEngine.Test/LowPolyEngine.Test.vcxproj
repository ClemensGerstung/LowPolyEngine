<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{055A7C2F-CA55-4F71-B9BB-56731D0B1134}</ProjectGuid>
    <RootNamespace>LowPolyEngineTest</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.15063.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <CustomBuildBeforeTargets>Build</CustomBuildBeforeTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <CustomBuildBeforeTargets>Build</CustomBuildBeforeTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <CustomBuildBeforeTargets>Build</CustomBuildBeforeTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <CustomBuildBeforeTargets>Build</CustomBuildBeforeTargets>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>D:\Libraries\glfw\x64\lib-vc2015;D:\Libraries\Vulkan\Source\lib;D:\Libraries\Vulkan\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PreBuildEvent>
      <Command>@echo off

if [%VULKAN_SDK%] == [] goto ERROR_NO_VULKAN

for %%f in (shaders/*.vert, shaders/*.frag) do (
	%VULKAN_SDK%/Bin/glslangValidator.exe -V shaders/%%f -o shaders/%%f.spv
)

goto END

:ERROR_NO_VULKAN
echo VULKAN_SDK path not found
echo please define variable!

:END</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Command>@echo off

if [%VULKAN_SDK%] == [] goto ERROR_NO_VULKAN

for %%f in (shaders/*.vert, shaders/*.frag) do (
	%VULKAN_SDK%/Bin/glslangValidator.exe -V shaders/%%f -o shaders/%%f.spv
)

goto END

:ERROR_NO_VULKAN
echo VULKAN_SDK path not found
echo please define variable!

:END</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>D:\Libraries\tiny_obj_loader;D:\Libraries\stb;D:\Libraries\glm;D:\Libraries\glfw\x64\include;D:\Libraries\Vulkan\Include;D:\Projekte\LowPolyEngine\LowPolyEngine;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:\Libraries\glfw\x64\lib-vc2015;D:\Libraries\Vulkan\Source\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PreBuildEvent>
      <Command>@echo off

if [%VULKAN_SDK%] == [] goto ERROR_NO_VULKAN

for %%f in (shaders/*.vert, shaders/*.frag) do (
	%VULKAN_SDK%/Bin/glslangValidator.exe -V shaders/%%f -o shaders/%%f.spv
)

goto END

:ERROR_NO_VULKAN
echo VULKAN_SDK path not found
echo please define variable!

:END</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Command>@echo off

if [%VULKAN_SDK%] == [] goto ERROR_NO_VULKAN

for %%f in (shaders/*.vert, shaders/*.frag) do (
	%VULKAN_SDK%/Bin/glslangValidator.exe -V shaders/%%f -o shaders/%%f.spv
)

goto END

:ERROR_NO_VULKAN
echo VULKAN_SDK path not found
echo please define variable!

:END</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalLibraryDirectories>D:\Libraries\glfw\x64\lib-vc2015;D:\Libraries\Vulkan\Source\lib;D:\Libraries\Vulkan\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PreBuildEvent>
      <Command>@echo off

if [%VULKAN_SDK%] == [] goto ERROR_NO_VULKAN

for %%f in (shaders/*.vert, shaders/*.frag) do (
	%VULKAN_SDK%/Bin/glslangValidator.exe -V shaders/%%f -o shaders/%%f.spv
)

goto END

:ERROR_NO_VULKAN
echo VULKAN_SDK path not found
echo please define variable!

:END</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Command>@echo off

if [%VULKAN_SDK%] == [] goto ERROR_NO_VULKAN

for %%f in (shaders/*.vert, shaders/*.frag) do (
	%VULKAN_SDK%/Bin/glslangValidator.exe -V shaders/%%f -o shaders/%%f.spv
)

goto END

:ERROR_NO_VULKAN
echo VULKAN_SDK path not found
echo please define variable!

:END</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalLibraryDirectories>D:\Libraries\glfw\x64\lib-vc2015;D:\Libraries\Vulkan\Source\lib;D:\Libraries\Vulkan\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PreBuildEvent>
      <Command>@echo off

if [%VULKAN_SDK%] == [] goto ERROR_NO_VULKAN

for %%f in (shaders/*.vert, shaders/*.frag) do (
	%VULKAN_SDK%/Bin/glslangValidator.exe -V shaders/%%f -o shaders/%%f.spv
)

goto END

:ERROR_NO_VULKAN
echo VULKAN_SDK path not found
echo please define variable!

:END</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Command>@echo off

if [%VULKAN_SDK%] == [] goto ERROR_NO_VULKAN

for %%f in (shaders/*.vert, shaders/*.frag) do (
	%VULKAN_SDK%/Bin/glslangValidator.exe -V shaders/%%f -o shaders/%%f.spv
)

goto END

:ERROR_NO_VULKAN
echo VULKAN_SDK path not found
echo please define variable!

:END</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="Main.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\LowPolyEngine\LowPolyEngine.vcxproj">
      <Project>{cadcf3b7-5fc7-4eef-b291-4af2734ce901}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="shaders\base.frag" />
    <None Include="shaders\base.vert" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>